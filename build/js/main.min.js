"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
new AgelarPhoneValidator({
  inputSelector: ".input-phone",
  submitSelector: ".validator-submit"
});
var arw,
  booksButton = document.querySelectorAll(".button-book"),
  booksButtonHideCont = document.querySelectorAll(".books-card__hide-cont"),
  closeBookButton = document.querySelectorAll(".close-books-card");
booksButton.forEach(function (e, t) {
  e.addEventListener("click", function () {
    console.log(arw, t), arw ? booksButtonHideCont[arw].classList.remove("books-card__hide-cont--active") : booksButtonHideCont[0].classList.remove("books-card__hide-cont--active"), booksButtonHideCont[t].classList.add("books-card__hide-cont--active"), arw = t, console.log(arw, t);
  });
}), closeBookButton.forEach(function (e, t) {
  e.addEventListener("click", function () {
    booksButtonHideCont[t - 1].classList.remove("books-card__hide-cont--active");
  });
});
var listLink = document.querySelectorAll(".header-nav__item-link"),
  overflowNew = document.querySelector(".over-new"),
  burgerButton = document.querySelector(".burger-button"),
  sidebarClose = document.querySelector(".burger-button-close");
burgerButton.addEventListener("click", taggleButton);
var sidebar = document.querySelector(".header-nav");
function taggleButton() {
  this.classList.toggle("change"), sidebar.classList.toggle("show"), overflowNew.classList.add("active");
}
window.innerWidth < 1440 && listLink.forEach(function (e, t) {
  e.addEventListener("click", function () {
    sidebar.classList.remove("show"), overflowNew.classList.remove("active");
  });
}), overflowNew.addEventListener("click", function () {
  burgerButton.classList.remove("change"), sidebar.classList.remove("show"), overflowNew.classList.remove("active");
}), sidebarClose.addEventListener("click", function () {
  burgerButton.classList.remove("change"), sidebar.classList.remove("show"), overflowNew.classList.remove("active");
}), document.querySelectorAll(".madal-cart__scroller").forEach(function (e, t) {
  new SimpleBar(e);
}), document.querySelectorAll(".books-card__scroll-box").forEach(function (e, t) {
  new SimpleBar(e);
}), document.querySelectorAll(".inner-scroll").forEach(function (e, t) {
  new SimpleBar(e);
}), document.querySelectorAll(".content-book-slider__text > div").forEach(function (e, t) {
  new SimpleBar(e);
});
var ChangerText = /*#__PURE__*/function () {
  function ChangerText(e) {
    _classCallCheck(this, ChangerText);
    this.selector = e.selector, this.text = e.text, this.changeText = e.changeText, this.init();
  }
  _createClass(ChangerText, [{
    key: "actChange",
    value: function actChange(e) {
      switch (e.textContent) {
        case this.changeText:
          e.textContent = this.text;
          break;
        case this.text:
          e.textContent = this.changeText;
      }
    }
  }, {
    key: "init",
    value: function init() {
      var _this = this;
      document.querySelectorAll(this.selector).forEach(function (e, t) {
        e.textContent = _this.text, e.addEventListener("click", function () {
          _this.actChange(e);
        });
      });
    }
  }]);
  return ChangerText;
}();
new ChangerText({
  selector: ".btn-expand",
  text: "Прочесть далее",
  changeText: "Свернуть"
}), new ChangerText({
  selector: ".btn-expands",
  text: "Развернуть еще",
  changeText: "Свернуть"
});
var newsSlider = new Swiper(".news-slider", {
    slidesPerView: "auto",
    navigation: {
      nextEl: ".news-slider-next",
      prevEl: ".news-slider-prev"
    },
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      1200: {
        spaceBetween: 30
      }
    }
  }),
  reviewsSlider = new Swiper(".reviews-slider", {
    slidesPerView: "auto",
    navigation: {
      nextEl: ".reviews-slider-next",
      prevEl: ".reviews-slider-prev"
    },
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      768: {
        spaceBetween: 30
      }
    }
  }),
  contentBookSlider = new Swiper(".content-book-slider", {
    slidesPerView: "auto",
    navigation: {
      nextEl: ".content-book-slider-next",
      prevEl: ".content-book-slider-prev"
    },
    grabCursor: !0
  }),
  contentBookBtnSlider = new Swiper(".content-book-btn-slider", {
    slidesPerView: "auto",
    navigation: {
      nextEl: ".content-book-btn-slider-next",
      prevEl: ".content-book-btn-slider-prev"
    },
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      768: {
        spaceBetween: 30
      }
    }
  }),
  topSectionSlider = new Swiper(".top-section-slider", {
    slidesPerView: "auto",
    navigation: {
      nextEl: ".top-section-slider-next",
      prevEl: ".top-section-slider-prev"
    },
    grabCursor: !0
  }),
  reviewsVideo = new Swiper(".reviews-video-slider", {
    slidesPerView: "auto",
    navigation: {
      nextEl: ".reviews-video-next",
      prevEl: ".reviews-video-prev"
    },
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      768: {
        spaceBetween: 30
      }
    }
  });
var Parallax = /*#__PURE__*/function () {
  function Parallax(e) {
    _classCallCheck(this, Parallax);
    this.wrapper = e.wrapper, this.layers = e.layers, this.scale = e.scale, this._init();
  }
  _createClass(Parallax, [{
    key: "calculateParallax",
    value: function calculateParallax(e) {
      var _this2 = this;
      var t = this.wrapper.getBoundingClientRect().left,
        s = this.wrapper.getBoundingClientRect().top,
        o = e.clientX - t - .5 * this.wrapper.offsetWidth,
        r = e.clientY - s - .5 * this.wrapper.offsetHeight;
      this.layers.forEach(function (e) {
        var t = e.dataset.speed,
          s = -(o * t).toFixed(2),
          n = -(r * t).toFixed(2);
        e.setAttribute("style", "transform: translate(".concat(s, "px, ").concat(n, "px) ").concat(_this2.scale ? "scale(".concat(_this2.scale, ")") : "", ";transition: .1s ease"));
      });
    }
  }, {
    key: "reset",
    value: function reset(e) {
      this.layers.forEach(function (e) {
        e.setAttribute("style", "transform: translate(0px, 0px);transition: .1s ease");
      });
    }
  }, {
    key: "_init",
    value: function _init() {
      var _this3 = this;
      this.wrapper.addEventListener("mousemove", function (e) {
        _this3.calculateParallax(e);
      }), this.wrapper.addEventListener("mouseout", function (e) {
        _this3.reset(e);
      });
    }
  }]);
  return Parallax;
}();
new Parallax({
  wrapper: document.querySelector(".top-section"),
  layers: document.querySelectorAll(".top-section-block__image")
}), window.innerWidth > 992 && new Parallax({
  wrapper: document.querySelector(".form-news"),
  layers: document.querySelectorAll(".form-news__inner-image > img")
});
var ItcTabs = /*#__PURE__*/function () {
  function ItcTabs(e, t) {
    _classCallCheck(this, ItcTabs);
    this._config = Object.assign({}, t), this._elTabs = "string" == typeof e ? document.querySelector(e) : e, this._elButtons = this._elTabs.querySelectorAll(".tabs__btn"), this._elPanes = this._elTabs.querySelectorAll(".tabs__pane"), this._eventShow = new Event("tab.itc.change"), this._init(), this._events();
  }
  _createClass(ItcTabs, [{
    key: "_init",
    value: function _init() {
      var _this4 = this;
      this._elTabs.setAttribute("role", "tablist"), this._elButtons.forEach(function (e, t) {
        e.dataset.index = t, e.setAttribute("role", "tab"), _this4._elPanes[t].setAttribute("role", "tabpanel");
      });
    }
  }, {
    key: "show",
    value: function show(e) {
      var t = this._elPanes[e.dataset.index],
        s = this._elTabs.querySelector(".tabs__btn--active"),
        o = this._elTabs.querySelector(".tabs__pane--show");
      e !== s && (s && s.classList.remove("tabs__btn--active"), o && o.classList.remove("tabs__pane--show"), e.classList.add("tabs__btn--active"), t.classList.add("tabs__pane--show"), this._elTabs.dispatchEvent(this._eventShow), e.focus());
    }
  }, {
    key: "showByIndex",
    value: function showByIndex(e) {
      var t = this._elButtons[e];
      t && this.show(t);
    }
  }, {
    key: "_events",
    value: function _events() {
      var _this5 = this;
      this._elTabs.addEventListener("click", function (e) {
        var t = e.target.closest(".tabs__btn");
        t && (e.preventDefault(), _this5.show(t));
      });
    }
  }]);
  return ItcTabs;
}();
var tabsRev = document.querySelectorAll(".tabs");
tabsRev.forEach(function (e, t) {
  new ItcTabs(tabsRev[t]);
});
var tabsBooks = document.querySelectorAll(".tabs-books");
tabsBooks.forEach(function (e, t) {
  new ItcTabs(tabsBooks[t]);
});
var contentBook = document.querySelectorAll(".content-book");
contentBook.forEach(function (e, t) {
  new ItcTabs(contentBook[t]);
});